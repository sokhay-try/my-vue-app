name: CI/CD Pipeline - Frontend

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*.*.*' # Trigger on version tags like v1.0.0

  workflow_dispatch: # Allows manual trigger from GitHub UI

jobs:
  build-and-push:
    runs-on: ubuntu-latest # The type of runner that the job will run on

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Action to checkout your repository code

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # Sets up Docker Buildx for efficient builds

      - name: Log in to Docker Hub # Or your preferred container registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # Your Docker Hub username (stored as a GitHub Secret)
          password: ${{ secrets.DOCKER_PASSWORD }} # Your Docker Hub password/PAT (stored as a GitHub Secret)

      - name: Set image tag
        id: set-image-tag # Give this step an ID to reference its outputs
        run: |
          # Logic to determine the Docker image tag based on branch or tag
          TAG_SUFFIX=""
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            TAG_SUFFIX="latest"
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            TAG_SUFFIX="develop"
          elif [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            TAG_SUFFIX="${{ github.ref_name }}" # Use the tag name directly (e.g., v1.0.0)
          else
            TAG_SUFFIX="${{ github.sha }}" # Fallback to commit SHA for other branches
          fi
          # Output the full image tag for subsequent steps
          echo "tag=my-vue-app-frontend:${TAG_SUFFIX}" >> "$GITHUB_OUTPUT"
          echo "IMAGE_TAG=${{ steps.set-image-tag.outputs.tag }}" # For debugging

      - name: Build and push Docker image
        uses: docker/build-push-action@v5 # Action to build and push Docker images
        with:
          context: . # The build context (root of your repo)
          file: Dockerfile # Path to your Dockerfile
          push: true # Push the image to the registry
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ steps.set-image-tag.outputs.tag }} # Full image tag (e.g., myusername/my-vue-app-frontend:latest)
          target: client-prod # Build the production stage of your Dockerfile
          cache-from: type=gha # Use GitHub Actions cache for faster builds
          cache-to: type=gha,mode=max # Store build cache in GHA

      - name: Verify image push (optional)
        run: |
          echo "Image ${{ secrets.DOCKER_USERNAME }}/${{ steps.set-image-tag.outputs.tag }} pushed successfully."
