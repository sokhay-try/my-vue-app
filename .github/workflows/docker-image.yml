name: Docker Image

on:
  workflow_dispatch:
  push:
    branches:
      - master # <- Just in case
      - main
      - develop
      - integration
    # Push events to matching v*.*.* i.e. v1.0.0, v20.15.10, v1.2.3-alpha-1
    # See docs/SPEC.md
    tags: ['v*.*.*']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Set image tag
        id: set-image-tag
        run: |
          # Logic to determine the Docker image tag based on branch or tag
          TAG_SUFFIX=""
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            TAG_SUFFIX="latest"
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            TAG_SUFFIX="develop"
          elif [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            TAG_SUFFIX="${{ github.ref_name }}" # Use the tag name directly (e.g., v1.0.0)
          else
            TAG_SUFFIX="${{ github.sha }}" # Fallback to commit SHA for other branches
          fi
          # Output the full image tag for subsequent steps
          echo "tag=my-vue-app-frontend:${TAG_SUFFIX}" >> "$GITHUB_OUTPUT"
          echo "IMAGE_TAG=${{ steps.set-image-tag.outputs.tag }}" # For debugging

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ steps.set-image-tag.outputs.tag }} # Full image tag (e.g., myusername/my-vue-app-frontend:latest)
          target: client-prod # Use the client-prod target from the Dockerfile
          catch-from: type=gha
          catch-to: type=gha,mode=max
      
      - name: Verify image push
        run: |
          echo "Image ${{ secrets.DOCKER_USERNAME }}/${{ steps.set-image-tag.outputs.tag }} pushed successfully."
